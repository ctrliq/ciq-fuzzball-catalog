# Copyright 2025 CIQ, Inc. All rights reserved.
{{- $root := "/fuzzball" }}
{{- $volumes := splitList "," .Volumes }}
{{- if eq (len $volumes) 0 }}
  {{-  fail "At least one volume has to be specified in the Volumes field." }}
{{- end }}

version: v1
volumes:
{{- range $i, $v := $volumes }}
  vol-{{ $i }}:
  {{- $parts := (splitList ":" $v) }}
  {{- if eq (len $parts) 2 }}
    reference: {{ $v }}
  {{- else if eq (len $parts) 3 }}
    reference: {{ index $parts 0 }}:{{ index $parts 1 }}
  {{- else }}
    {{- fail (printf "Invalid volume reference: %s" $v) }}
  {{- end }}
{{- end }}
jobs:
  cloud-commander:
    image:
      uri: docker://coderaiser/cloudcmd:latest-alpine
    mounts:
{{- range $i, $v := $volumes }}
  {{- $parts := splitList ":" $v }}
  {{- if eq (len $parts) 2 }}
      vol-{{ $i }}:
        location: {{ $root }}/{{ trimPrefix "volume://" $v }}
   {{- else }}
      vol-{{ $i }}:
        location: {{ $root }}/{{ index $parts 2 | trimPrefix "/" }}
   {{- end}}
{{- end }}

    cwd: /fuzzball
    env:
      - HOME=/tmp/cloudcommander
    command:
      - /bin/sh
      - '-c'
      - |
        port=$(( (RANDOM % 1000) + 8000 ))
        mkdir -p ${HOME}
        cat <<__EOF__ > ${HOME}/.cloudcmd.menu.js
        export default {
            'R - cd /': async ({CloudCmd}) => {
                await CloudCmd.changeDir('/');
            },
            'X - Exit the File Browser': async ({CloudCmd}) => {
                const {Dialog, CurrentInfo, TerminalRun} = DOM;
                const [cancel] = await Dialog.confirm("Exit Cloud Commander?");
                if (cancel) {
                    return;
                }
                CloudCmd.TerminalRun.show({command: 'bash -c "kill \$(cat ${HOME}/.cloudcmd.pid)"', autoClose: true});
                setTimeout(() => {
                    document.body.innerHTML = '<h1>Cloud Commander has exited</h1><p>You can close this tab. The Fuzzball job will end automatically</p>';
                    document.title = 'Session Ended';
                    }, 1000);
            },
        }
        __EOF__
        echo
        echo "Access to cloud commander requires port-forwarding via the CLI:"
        echo
        echo "# fuzzball workflow port-forward ${FB_WORKFLOW_ID} cloud-commander $port:$port"
        echo
        echo "Then navigate to http://localhost:$port"
        echo
        /usr/src/app/bin/cloudcmd.mjs \
          --port $port \
          --name "Fuzzball Cloud Commander" \
          --keys-panel \
          --config-dialog \
          --root {{ $root }} \
          --terminal &
        echo $! > ${HOME}/.cloudcmd.pid
        wait
        exit 0

    resource:
      cpu:
        cores: 1
      memory:
        size: 6GiB
    policy:
      timeout:
        execute: {{.Timeout}}
