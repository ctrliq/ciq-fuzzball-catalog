version: v1

volumes:
  data_volume:
    reference: volume://user/persistent
    ingress:
{{- $filename := .InputFasta | base }}
      - source:
          uri: {{ .InputFasta }}
        destination:
          uri: file://immunebuilder/input/{{ $filename }}
{{- if .OutputPathOptional }}
    egress:
{{- $filenameNoExt := $filename | trimSuffix ".fasta" }}
      - source:
          uri: file://immunebuilder/output/{{ $filenameNoExt }}.pdb
        destination:
          uri: {{ .OutputPathOptional }}/{{ $filenameNoExt }}.pdb
          secret: {{ .SecretNameOptional }}
{{- end }}

jobs:
  immunebuilder-predict:
    cwd: /data/immunebuilder
    image:
      uri: docker://oceansource/immunebuilder:latest
    mounts:
      data_volume:
        location: /data
    command:
      - /bin/sh
      - '-c'
      - |
        #!/bin/sh
{{- $commands := dict "antibody" "ABodyBuilder2" "nanobody" "NanoBodyBuilder2" "tcr" "TCRBuilder2" }}
{{- $command := index $commands (.BuilderType | default "antibody") | default "ABodyBuilder2" }}
{{- $filename := .InputFasta | base }}
{{- $filenameNoExt := $filename | trimSuffix ".fasta" }}
        
        mkdir -p /data/immunebuilder/output
        sed -i 's/>.*[Hh]eavy [Cc]hain.*/>H/g; s/>.*[Ll]ight [Cc]hain.*/>L/g' /data/immunebuilder/input/{{ $filename }}
        
        {{ $command }} \
          --fasta_file /data/immunebuilder/input/{{ $filename }} \
          -o /data/immunebuilder/output/{{ $filenameNoExt }}.pdb \
          --verbose
        
        echo "Prediction completed"
    resource:
      cpu:
        cores: 4
        affinity: NUMA
      memory:
        size: 8GB
      devices:
        nvidia.com/gpu: 1
    policy:
      timeout:
        execute: 2h0s
      retry:
        attempts: 2
